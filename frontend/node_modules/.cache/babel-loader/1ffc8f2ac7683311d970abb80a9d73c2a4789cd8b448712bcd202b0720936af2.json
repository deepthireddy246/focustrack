{"ast":null,"code":"var _jsxFileName = \"/Users/deepthi/Desktop/focustrack/frontend/src/components/PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PomodoroTimer({\n  tasks,\n  onSessionComplete\n}) {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\n  const [isRunning, setIsRunning] = useState(false);\n  const [isBreak, setIsBreak] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [sessionCount, setSessionCount] = useState(0);\n  const intervalRef = useRef(null);\n  const WORK_TIME = 25 * 60; // 25 minutes\n  const BREAK_TIME = 5 * 60; // 5 minutes\n\n  useEffect(() => {\n    if (isRunning) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleSessionComplete();\n            return isBreak ? WORK_TIME : BREAK_TIME;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, isBreak]);\n  const handleSessionComplete = async () => {\n    if (selectedTask && !isBreak) {\n      // Record work session\n      try {\n        const token = localStorage.getItem('token');\n        await fetch('/api/sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: selectedTask.id,\n            session_type: 'work',\n            duration: 25\n          })\n        });\n      } catch (error) {\n        console.error('Error recording session:', error);\n      }\n    }\n    if (isBreak) {\n      // Record break session\n      try {\n        const token = localStorage.getItem('token');\n        await fetch('/api/sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: selectedTask.id,\n            session_type: 'break',\n            duration: 5\n          })\n        });\n      } catch (error) {\n        console.error('Error recording break session:', error);\n      }\n    }\n    setSessionCount(prev => prev + 1);\n    setIsBreak(!isBreak);\n    setTimeLeft(isBreak ? WORK_TIME : BREAK_TIME);\n    setIsRunning(false);\n\n    // Notify parent component to refresh tasks\n    onSessionComplete();\n\n    // Show notification\n    if (typeof Notification !== 'undefined' && Notification.permission === 'granted') {\n      new Notification(isBreak ? 'Break Complete!' : 'Work Session Complete!', {\n        body: isBreak ? 'Time to get back to work!' : 'Great job! Take a 5-minute break.',\n        icon: '/favicon.ico'\n      });\n    }\n  };\n  const startTimer = () => {\n    if (!selectedTask && !isBreak) {\n      alert('Please select a task to work on');\n      return;\n    }\n    setIsRunning(true);\n  };\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTimeLeft(isBreak ? BREAK_TIME : WORK_TIME);\n  };\n  const skipSession = () => {\n    setIsRunning(false);\n    setIsBreak(!isBreak);\n    setTimeLeft(isBreak ? WORK_TIME : BREAK_TIME);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const requestNotificationPermission = () => {\n    if (typeof Notification !== 'undefined' && Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n  };\n  useEffect(() => {\n    requestNotificationPermission();\n  }, []);\n  const incompleteTasks = tasks.filter(task => !task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: isBreak ? 'Break Time' : 'Focus Time'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-status\",\n        children: isBreak ? 'Take a 5-minute break to recharge' : selectedTask ? `Working on: ${selectedTask.title}` : 'Select a task to start working'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: formatTime(timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: startTimer,\n          disabled: !selectedTask && !isBreak,\n          children: [\"Start \", isBreak ? 'Break' : 'Work Session']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: pauseTimer,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: resetTimer,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: skipSession,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: [\"Sessions completed today: \", sessionCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), !isBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \"Select a Task to Work On\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), incompleteTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No incomplete tasks available. Create a new task to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        style: {\n          flexWrap: 'wrap'\n        },\n        children: incompleteTasks.map(task => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'btn-success' : 'btn-secondary'}`,\n          onClick: () => setSelectedTask(task),\n          disabled: isRunning,\n          children: [task.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge\",\n            style: {\n              marginLeft: '8px',\n              backgroundColor: 'rgba(255,255,255,0.2)'\n            },\n            children: task.sessions_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), selectedTask && !isBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedTask.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), selectedTask.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: selectedTask.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: [\"Sessions completed: \", selectedTask.sessions_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Use the Pomodoro Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          paddingLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Select a task you want to work on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click \\\"Start Work Session\\\" to begin a 25-minute focused work period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Stay focused on your task until the timer ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Take a 5-minute break when the work session completes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Repeat the cycle to build momentum and maintain focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(PomodoroTimer, \"M3gmehau2XqsD3UjMQBMsJs4QpU=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","PomodoroTimer","tasks","onSessionComplete","_s","timeLeft","setTimeLeft","isRunning","setIsRunning","isBreak","setIsBreak","selectedTask","setSelectedTask","sessionCount","setSessionCount","intervalRef","WORK_TIME","BREAK_TIME","current","setInterval","prev","handleSessionComplete","clearInterval","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","task_id","id","session_type","duration","error","console","Notification","permission","icon","startTimer","alert","pauseTimer","resetTimer","skipSession","formatTime","seconds","mins","Math","floor","secs","toString","padStart","requestNotificationPermission","requestPermission","incompleteTasks","filter","task","completed","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","disabled","length","style","flexWrap","map","marginLeft","backgroundColor","sessions_count","description","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/deepthi/Desktop/focustrack/frontend/src/components/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction PomodoroTimer({ tasks, onSessionComplete }) {\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\n  const [isRunning, setIsRunning] = useState(false);\n  const [isBreak, setIsBreak] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [sessionCount, setSessionCount] = useState(0);\n  const intervalRef = useRef(null);\n\n  const WORK_TIME = 25 * 60; // 25 minutes\n  const BREAK_TIME = 5 * 60; // 5 minutes\n\n  useEffect(() => {\n    if (isRunning) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleSessionComplete();\n            return isBreak ? WORK_TIME : BREAK_TIME;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, isBreak]);\n\n  const handleSessionComplete = async () => {\n    if (selectedTask && !isBreak) {\n      // Record work session\n      try {\n        const token = localStorage.getItem('token');\n        await fetch('/api/sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: selectedTask.id,\n            session_type: 'work',\n            duration: 25\n          }),\n        });\n      } catch (error) {\n        console.error('Error recording session:', error);\n      }\n    }\n\n    if (isBreak) {\n      // Record break session\n      try {\n        const token = localStorage.getItem('token');\n        await fetch('/api/sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: selectedTask.id,\n            session_type: 'break',\n            duration: 5\n          }),\n        });\n      } catch (error) {\n        console.error('Error recording break session:', error);\n      }\n    }\n\n    setSessionCount(prev => prev + 1);\n    setIsBreak(!isBreak);\n    setTimeLeft(isBreak ? WORK_TIME : BREAK_TIME);\n    setIsRunning(false);\n    \n    // Notify parent component to refresh tasks\n    onSessionComplete();\n\n    // Show notification\n    if (typeof Notification !== 'undefined' && Notification.permission === 'granted') {\n      new Notification(\n        isBreak ? 'Break Complete!' : 'Work Session Complete!',\n        {\n          body: isBreak \n            ? 'Time to get back to work!' \n            : 'Great job! Take a 5-minute break.',\n          icon: '/favicon.ico'\n        }\n      );\n    }\n  };\n\n  const startTimer = () => {\n    if (!selectedTask && !isBreak) {\n      alert('Please select a task to work on');\n      return;\n    }\n    setIsRunning(true);\n  };\n\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTimeLeft(isBreak ? BREAK_TIME : WORK_TIME);\n  };\n\n  const skipSession = () => {\n    setIsRunning(false);\n    setIsBreak(!isBreak);\n    setTimeLeft(isBreak ? WORK_TIME : BREAK_TIME);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const requestNotificationPermission = () => {\n    if (typeof Notification !== 'undefined' && Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n  };\n\n  useEffect(() => {\n    requestNotificationPermission();\n  }, []);\n\n  const incompleteTasks = tasks.filter(task => !task.completed);\n\n  return (\n    <div>\n      <div className=\"timer-container\">\n        <h2 className=\"text-center mb-4\">\n          {isBreak ? 'Break Time' : 'Focus Time'}\n        </h2>\n        \n        <div className=\"timer-status\">\n          {isBreak \n            ? 'Take a 5-minute break to recharge'\n            : selectedTask \n              ? `Working on: ${selectedTask.title}`\n              : 'Select a task to start working'\n          }\n        </div>\n\n        <div className=\"timer-display\">\n          {formatTime(timeLeft)}\n        </div>\n\n        <div className=\"timer-controls\">\n          {!isRunning ? (\n            <button \n              className=\"btn btn-success\"\n              onClick={startTimer}\n              disabled={!selectedTask && !isBreak}\n            >\n              Start {isBreak ? 'Break' : 'Work Session'}\n            </button>\n          ) : (\n            <button \n              className=\"btn btn-secondary\"\n              onClick={pauseTimer}\n            >\n              Pause\n            </button>\n          )}\n          \n          <button \n            className=\"btn btn-secondary\"\n            onClick={resetTimer}\n          >\n            Reset\n          </button>\n          \n          <button \n            className=\"btn btn-secondary\"\n            onClick={skipSession}\n          >\n            Skip\n          </button>\n        </div>\n\n        <div className=\"text-center mt-3\">\n          <p className=\"text-muted\">\n            Sessions completed today: {sessionCount}\n          </p>\n        </div>\n      </div>\n\n      {/* Task Selection */}\n      {!isBreak && (\n        <div className=\"card\">\n          <h3 className=\"mb-3\">Select a Task to Work On</h3>\n          \n          {incompleteTasks.length === 0 ? (\n            <p className=\"text-muted\">No incomplete tasks available. Create a new task to get started!</p>\n          ) : (\n            <div className=\"d-flex gap-2\" style={{ flexWrap: 'wrap' }}>\n              {incompleteTasks.map(task => (\n                <button\n                  key={task.id}\n                  className={`btn ${selectedTask?.id === task.id ? 'btn-success' : 'btn-secondary'}`}\n                  onClick={() => setSelectedTask(task)}\n                  disabled={isRunning}\n                >\n                  {task.title}\n                  <span className=\"badge\" style={{ marginLeft: '8px', backgroundColor: 'rgba(255,255,255,0.2)' }}>\n                    {task.sessions_count}\n                  </span>\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Current Task Info */}\n      {selectedTask && !isBreak && (\n        <div className=\"current-task\">\n          <h3>Current Task</h3>\n          <p><strong>{selectedTask.title}</strong></p>\n          {selectedTask.description && (\n            <p className=\"text-muted\">{selectedTask.description}</p>\n          )}\n          <p className=\"text-muted\">\n            Sessions completed: {selectedTask.sessions_count}\n          </p>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"card\">\n        <h3>How to Use the Pomodoro Timer</h3>\n        <ol style={{ paddingLeft: '20px' }}>\n          <li>Select a task you want to work on</li>\n          <li>Click \"Start Work Session\" to begin a 25-minute focused work period</li>\n          <li>Stay focused on your task until the timer ends</li>\n          <li>Take a 5-minute break when the work session completes</li>\n          <li>Repeat the cycle to build momentum and maintain focus</li>\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default PomodoroTimer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}